Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
 

Constraints:

-231 <= x <= 231 - 1
__________________________________________________________________________________________________
class Solution {
    public int reverse(int x) {
        int temp=x;
        int copy =0;
        int lastDigit=0;
        while(temp!=0)
        {
            lastDigit= temp/10;
            if(copy > Integer.MAX_VALUE / 10 || (copy == Integer.MAX_VALUE / 10 && lastDigit > 7))
            {
                return 0;
            }
            if(copy < Integer.MIN_VALUE / 10 || (copy == Integer.MIN_VALUE / 10 && lastDigit < -8))
            {
                return 0;
            }
            copy= copy*10 + (temp%10);
            temp = temp/10;
        }
        return copy;
        
    }
}
___________________________________________________________________________________________________________________________________
All test cases passed.
