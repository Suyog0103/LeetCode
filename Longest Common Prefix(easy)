Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

 

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 

Constraints:

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.
_______________________________________________________________________________________________________________
class Solution {
    public String longestCommonPrefix(String[] strs) {
        String output ="";
        int count = 0;
        int charNo= 0;
        for(int i=0; i< strs[0].length(); i++)
        {
            count=0;
            for(int j=1; j<strs.length; j++)
            {
                if(i< strs[j].length())
                {
                    if(strs[0].charAt(i)==strs[j].charAt(charNo))
                    {
                        count++;
                    }
                } 
            }
            if(count==(strs.length-1))
            {
                output =output + strs[0].charAt(i);
                charNo++;
            }
            else
            {
                return output;
            }

        }
        return output;
    }
}
_____________________________________________________________________________________
All test cases passed.
