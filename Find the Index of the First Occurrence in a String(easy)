Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

Example 1:

Input: haystack = "sadbutsad", needle = "sad"
Output: 0
Explanation: "sad" occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.
Example 2:

Input: haystack = "leetcode", needle = "leeto"
Output: -1
Explanation: "leeto" did not occur in "leetcode", so we return -1.
 

Constraints:

1 <= haystack.length, needle.length <= 104
haystack and needle consist of only lowercase English characters.
_________________________________________________________________________________________________________________________________________________________________
class Solution {
    public int strStr(String haystack, String needle) {
        char firstchar = needle.charAt(0);
        int count=1;
        if(haystack.length()<needle.length())
        {
            return -1;
        }
        for(int i=0; i<haystack.length(); i++)
        {
            if(firstchar==haystack.charAt(i))
            {
                int k=i+1;
                System.out.println("k= "+k);
                for(int j=1;j<needle.length(); j++,k++)
                {
                    if(k<haystack.length())
                    {
                        if(needle.charAt(j)==haystack.charAt(k))
                        {
                            count++;
                        }
                    }
                }
                if(needle.length()==count)
                {
                    return i;
                }
            }
            count=1;
        }
        return -1;
        
    }
}
_______________________________________________________________________________________________________________________________
All test cases passed.
